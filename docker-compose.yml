version: '3.9'

services:
  web:
    container_name: WEB
    image: nginx:${NGINX_VERSION:-latest}
    profiles:
      - nginx
    restart: always
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    environment:
      - TZ=${TZ:-Asia/Dhaka}
    volumes:
      - ./../application:/app
      - ./docker/logs/nginx:/var/log/nginx
      - ./docker/sites/nginx:/etc/nginx/conf.d
      - ./docker/ssl:/etc/ssl/certs:rw
      - ./docker/ssl:/etc/ssl/private:rw
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - php
    networks:
      - abmmhasan-net

  php:
    container_name: Core
    build:
      context: docker/sites
      dockerfile: nginx.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-8.3}
        UID: ${UID:-1000}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS:-}
        LINUX_PACKAGES: ${LINUX_PACKAGES:-}
        NODE_VERSION: ${NODE_VERSION:-}
    profiles:
      - nginx
    restart: always
    environment:
      - TZ=${TZ:-Asia/Dhaka}
    env_file:
      - "./.env"
    volumes:
      - ./../application:/app
      - ./docker/conf/php/php.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./docker/conf/php/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./docker/conf/php/openssl.cnf:/etc/ssl/openssl.cnf:rw
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - abmmhasan-net

  app:
    container_name: Core
    build:
      context: docker/sites
      dockerfile: apache.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-8.2}
        UID: ${UID:-1000}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS:-}
        LINUX_PACKAGES: ${LINUX_PACKAGES:-}
        NODE_VERSION: ${NODE_VERSION:-}
    profiles:
      - apache
    restart: always
    environment:
      - TZ=${TZ:-Asia/Dhaka}
    env_file:
      - "./.env"
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./../application:/var/www/html
      - ./docker/conf/php/php.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./docker/conf/php/openssl.cnf:/etc/ssl/openssl.cnf
      - ./docker/ssl:/etc/apache2/ssl:rw
      - ./docker/logs/apache:/var/log/apache2
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - abmmhasan-net

  mysql-server:
    container_name: MYSQL
    image: ${MYSQL_IMAGE:-mariadb}:${MYSQL_VERSION:-latest}
    profiles:
      - mysql
      - mariadb
    restart: always
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-12345}
      - MYSQL_USER=${MYSQL_USER:-devuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-12345}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-localdb}
      - TZ=${TZ:-Asia/Dhaka}
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/logs/mysql:/var/log/mysql
    networks:
      - abmmhasan-net

  mysql-client:
    container_name: MY_ADMIN
    image: phpmyadmin:latest
    profiles:
      - mysql
      - mariadb
    restart: always
    ports:
      - "${MYADMIN_PORT:-3300}:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql-server
      - PMA_PORT=${MYSQL_PORT:-3306}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-12345}
      - MYSQL_USER=${MYSQL_USER:-devuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-12345}
      - TZ=${TZ:-Asia/Dhaka}
    volumes:
      - ./docker/conf/php/php.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./docker/data/phpmyadmin:/etc/phpmyadmin/conf.d:ro
    depends_on:
      - mysql-server
    networks:
      - abmmhasan-net

  postgres-server:
    container_name: POSTGRESQL
    image: postgres:${POSTGRESQL_VERSION:-latest}
    profiles:
      - postgresql
    restart: always
    ports:
      - "${POSTGRESQL_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DATABASE:-postgres}
      - TZ=${TZ:-Asia/Dhaka}
    volumes:
      - ./docker/data/postgresql:/var/lib/postgresql/data
    networks:
      - abmmhasan-net

  postgres-client:
    container_name: PG_ADMIN
    image: dpage/pgadmin4:latest
    profiles:
      - postgresql
    restart: always
    ports:
      - "${PGADMIN_PORT:-5400}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@email.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - TZ=${TZ:-Asia/Dhaka}
    volumes:
      - ./docker/data/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres-server
    networks:
      - abmmhasan-net

  mongo-server:
    container_name: MONGODB
    image: mongo:${MONGODB_VERSION:-latest}
    profiles:
      - mongodb
    restart: always
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD:-12345}
      - TZ=${TZ:-Asia/Dhaka}
    logging:
      options:
        max-size: 1g
    networks:
      - abmmhasan-net

  mongo-client:
    container_name: MONGO_ADMIN
    image: mongo-express:${ME_VERSION:-latest}
    profiles:
      - mongodb
    restart: always
    ports:
      - "${ME_PORT:-8081}:8081"
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_BA_USERNAME:-root}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_BA_PASSWORD:-12345}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_ROOT_USERNAME:-root}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_ROOT_PASSWORD:-12345}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGODB_ROOT_USERNAME:-root}:${MONGODB_ROOT_PASSWORD:-12345}@mongo:${MONGODB_PORT:-27017}/
      - TZ=${TZ:-Asia/Dhaka}
    depends_on:
      - mongo-server
    networks:
      - abmmhasan-net

  elasticsearch-server:
    container_name: ELASTICSEARCH
    image: elasticsearch:${ELASTICSEARCH_VERSION:-8.12.2}
    profiles:
      - elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
    environment:
      - TZ=${TZ:-Asia/Dhaka}
      - discovery.type='single-node'
      - xpack.security.enabled='false'
    volumes:
      - ./docker/data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - abmmhasan-net

  elasticsearch-client:
    container_name: KIBANA
    image: kibana:${ELASTICSEARCH_VERSION:-8.12.2}
    profiles:
      - elasticsearch
    restart: always
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    environment:
      - TZ=${TZ:-Asia/Dhaka}
      - ELASTICSEARCH_HOSTS='["http://elasticsearch:${ELASTICSEARCH_PORT:-9200}"]'
    depends_on:
      - elasticsearch-server
    networks:
      - abmmhasan-net

  redis-server:
    container_name: REDIS
    image: redis/redis-stack-server:${REDIS_VERSION:-latest}
    profiles:
      - redis
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./docker/data/redis:/data
    environment:
      - TZ=${TZ:-Asia/Dhaka}
      - REDIS_ARGS = "--save 10 1 --appendonly yes"
    networks:
      - abmmhasan-net

  redis-client:
    container_name: REDIS_INSIGHT
    image: redis/redisinsight:latest
    profiles:
      - redis
    restart: always
    environment:
      - TZ=${TZ:-Asia/Dhaka}
    ports:
      - "${RI_PORT:-5540}:5540"
    volumes:
      - ./docker/data/redis-insight:/data
    depends_on:
      - redis-server
    networks:
      - abmmhasan-net

networks:
  abmmhasan-net:
    name: abmmhasan-net
    driver: bridge
